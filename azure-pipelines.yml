#
#  This is the driver file for Azure DevOps 2019 build pipeline
#
trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      version: 2.2.203
      installationPath: $(Agent.ToolsDirectory)/dotnet
  #
  # Setup sonarcloud authentication
  #
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: "sonar-cloud-ctoec"
      organization: "ctoec"
      scannerMode: "MSBuild"
      projectKey: "ecis-experimental"
      extraProperties: |
        sonar.exclusions=**/Migrations/**,**/DbInitializer.cs
        sonar.coverage.exclusions=**/**
  #
  # Download dependencies
  #
  - task: DotNetCoreCLI@2
    displayName: "Script: dotnet restore"
    inputs:
      command: restore
      projects: "$(Build.SourcesDirectory)/Hedwig.sln"
  #
  # Embed build id in help file
  #
  - task: replacetokens@3
    displayName: "Replace Tokens: Help.tsx"
    inputs:
      targetFiles: "**/Help.tsx"
      encoding: "auto"
      writeBOM: true
      actionOnMissing: "warn"
      keepToken: false
      tokenPrefix: "__"
      tokenSuffix: "__"
  #
  # Create an optimized production build
  #
  - script: dotnet publish "$(Build.SourcesDirectory)/src/Hedwig/hedwig.csproj" --output "$(Build.SourcesDirectory)/src/Hedwig/dist" --configuration Release --no-restore
    displayName: "Script: dotnet publish"
  #
  # Generate idempotent db migration script for mssql
  #
  - script: export ConnectionStrings__HEDWIG=xxx && dotnet ef --verbose migrations script --idempotent --output $(Build.ArtifactStagingDirectory)/hedwig-db.sql --context HedwigContext --project src/Hedwig
    displayName: "Script: dotnet ef migrations script"
  #
  # Add beanstalk deployment manifest to distribution
  #
  - script: cp aws-windows-deployment-manifest.json $(Build.SourcesDirectory)/src/Hedwig/dist
    displayName: "Script: add beanstalk deployment manifest to distribution"
  #
  # Add deploy utility libs to distribution
  #
  - script: cp ./lib/ef.dll $(Build.SourcesDirectory)/src/Hedwig/dist
    displayName: "Script: add utility libs to distribution"
  #
  # Perform backend tests
  #
  - task: DockerCompose@0
    displayName: "Docker compose run tests"
    inputs:
      dockerComposeFile: "docker-compose.test.yaml"
      dockerComposeCommand: "up --exit-code-from test_backend"

  #
  # Publish backend test results
  #
  - task: PublishTestResults@2
    displayName: "Publish test results"
    inputs:
      testResultsFormat: "VSTest"
      testResultsFiles: "**/*.trx"
      failTaskOnFailedTests: true

  #
  # Perform client unit tests
  #
  - script: cd src/Hedwig/ClientApp && yarn test --ci
    displayName: "Script: yarn test"
  #
  # Install typescript for sonarcloud
  #
  - script: npm install typescript --loglevel verbose
    displayName: "Script: npm install typescript"
  #
  # Perform & publish static code analysis to sonarcloud
  #
  - task: SonarCloudAnalyze@1
  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: "300"
  #
  # Zip app runtime release
  #
  - task: ArchiveFiles@2
    displayName: "Archive Files"
    inputs:
      rootFolderOrFile: "$(Build.SourcesDirectory)/src/Hedwig/dist"
      includeRootFolder: false
      archiveType: "zip"
      #tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: "$(Build.ArtifactStagingDirectory)/hedwig-spa.zip"
      replaceExistingArchive: true
  #
  # Publish artifact to dropbox - hedwig-spa
  #
  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifacts: hedwig-spa"
    inputs:
      pathToPublish: "$(Build.ArtifactStagingDirectory)/hedwig-spa.zip"
      artifactName: hedwig-spa
  #
  # Publish artifact to dropbox - hedwig-db
  #
  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifacts: hedwig-db"
    inputs:
      pathToPublish: "$(Build.ArtifactStagingDirectory)/hedwig-db.sql"
      artifactName: hedwig-db

#
# Issues
#
#   a. dependency manager - yarn
#     - package.json must include "test": "CI=true react-scripts test --env=jsdom",
#        or yarn test will hang during CI build
#

