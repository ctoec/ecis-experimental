#
#  This is the driver file for Azure DevOps 2019 build pipeline
#

resources:
  repositories:
    - repository: WingedKeys
      type: github
      name: ctoec/winged-keys
      endpoint: "ctoec"

trigger:
  - master

pr:
  branches:
    include:
      - "*"

pool:
  vmImage: "ubuntu-latest"

variables:
  CI_BUILD: "true"

jobs:
  #
  # Backend Tests
  #
  - job: test_backend
    displayName: "Backend Tests"

    steps:
      - task: UseDotNet@2
        displayName: "Use .NET Core sdk"
        inputs:
          packageType: sdk
          version: 3.1.x
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - task: DotNetCoreCLI@2
        displayName: "Install dotnet-format"
        inputs:
          command: "custom"
          custom: "tool"
          arguments: "update -g dotnet-format"

      # - task: DotNetCoreCLI@2
      #   displayName: 'Check dotnet formatting'
      #   inputs:
      #     command: 'custom'
      #     custom: 'format'
      #     arguments: '--dry-run --check --verbosity diagnostic'

      - task: DotNetCoreCLI@2
        displayName: "Restore HedwigTests"
        inputs:
          command: restore
          projects: "$(Build.SourcesDirectory)/test/HedwigTests/HedwigTests.csproj"

      - task: DockerCompose@0
        displayName: "Docker compose run tests"
        inputs:
          dockerComposeFile: "docker-compose.test.yaml"
          dockerComposeCommand: "up --exit-code-from test_backend"

      - task: PublishTestResults@2
        displayName: "Publish test results"
        condition: succeededOrFailed()
        inputs:
          testResultsFormat: "VSTest"
          testResultsFiles: "**/*.trx"
          failTaskOnFailedTests: true

  #
  # Frontend Tests
  #
  - job: test_frontend
    displayName: "Frontend Tests"

    steps:
      # THIS IS CURRENTLY FAILING WITH NO GOOD REASON. DISABLING IT UNTIL FURTHER INQUIRY IS CONDUCTED.
      # - script: cd $(Build.SourcesDirectory)/src/Hedwig/ClientApp && npx prettier --single-quote --check "src/**/*.{js,jsx,ts,tsx,json,css,scss}"
      #   displayName: "Check formatting"

      - script: cd $(Build.SourcesDirectory)/src/Hedwig/ClientApp && yarn install &&  yarn test --ci
        displayName: "Install node_modules and Run Tests"

  #
  # E2E Tests
  #
  - job: test_e2e
    displayName: "E2E Tests"

    steps:
      - checkout: self
        path: ecis-experimental
      - checkout: WingedKeys
        path: winged-keys

      - task: DockerCompose@0
        displayName: "Docker compose up"
        inputs:
          dockerComposeFile: "$(Agent.BuildDirectory)/ecis-experimental/docker-compose.e2e.test.yaml"
          dockerComposeCommand: "up -d"

      - task: DockerCompose@0
        displayName: "Docker compose run e2e tests"
        inputs:
          dockerComposeFile: "$(Agent.BuildDirectory)/ecis-experimental/docker-compose.e2e.test.yaml"
          dockerComposeCommand: "exec -T client /run-e2e-test.sh"
        continueOnError: true

      - task: PublishTestResults@2
        displayName: "Publish test results"
        condition: succeededOrFailed()
        inputs:
          testResultsFormat: "JUnit"
          searchFolder: "$(Agent.BuildDirectory)"
          testResultsFiles: "**/junit.xml"
          failTaskOnFailedTests: true

  #
  # Build and Package Release
  #
  - job: package_release
    displayName: "Build and Package Release"

    steps:
      - task: UseDotNet@2
        displayName: "Install .NET Core sdk"
        inputs:
          packageType: sdk
          version: 3.1.x
          installationPath: $(Agent.ToolsDirectory)/dotnet

      # Embed build id in help file
      - task: replacetokens@3
        displayName: "Replace tokens in Help.tsx"
        inputs:
          targetFiles: "**/Help.tsx"
          encoding: "auto"
          writeBOM: true
          actionOnMissing: "warn"
          keepToken: false
          tokenPrefix: "__"
          tokenSuffix: "__"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifacts: hedwig-uncompiled-spa"
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          pathToPublish: "$(Build.SourcesDirectory)/src/Hedwig/ClientApp"
          artifactName: hedwig-uncompiled-spa

      - script: dotnet tool install --tool-path $(Agent.ToolsDirectory) dotnet-ef --version 3.1.4
        displayName: "Install EntityFramework"

      - script: export ConnectionStrings__HEDWIG=xxx && $(Agent.ToolsDirectory)/dotnet-ef --verbose migrations script --idempotent --output $(Build.ArtifactStagingDirectory)/hedwig-db.sql --context HedwigContext --project src/Hedwig
        displayName: "Generate migration script"

      - script: dotnet publish "$(Build.SourcesDirectory)/src/Hedwig/Hedwig.csproj" --output "$(Build.SourcesDirectory)/src/Hedwig/dist" --configuration Release
        displayName: "Publish Hedwig"