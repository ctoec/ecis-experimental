// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`check matches snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <fieldset
        aria-required="true"
        class="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="id-fieldset"
      >
        <legend
          class="usa-sr-only"
          id="fieldset-legend-id-fieldset"
        >
          choice
        </legend>
        <div
          class="grid-gap grid-row margin-top-3"
        >
          <div
            class=""
          >
            <div
              class="usa-checkbox undefined"
            >
              <input
                class="usa-checkbox__input"
                id="id-1"
                name=""
                type="checkbox"
                value="1"
              />
              <label
                class="usa-checkbox__label"
                for="id-1"
              >
                Option 1
              </label>
            </div>
            <div
              class="usa-checkbox undefined"
            >
              <input
                class="usa-checkbox__input"
                id="id-2"
                name=""
                type="checkbox"
                value="2"
              />
              <label
                class="usa-checkbox__label"
                for="id-2"
              >
                Option 2
              </label>
            </div>
          </div>
        </div>
      </fieldset>
    </div>
  </body>,
  "container": <div>
    <fieldset
      aria-required="true"
      class="grid-gap grid-row usa-fieldset
			
			 undefined
			"
      id="id-fieldset"
    >
      <legend
        class="usa-sr-only"
        id="fieldset-legend-id-fieldset"
      >
        choice
      </legend>
      <div
        class="grid-gap grid-row margin-top-3"
      >
        <div
          class=""
        >
          <div
            class="usa-checkbox undefined"
          >
            <input
              class="usa-checkbox__input"
              id="id-1"
              name=""
              type="checkbox"
              value="1"
            />
            <label
              class="usa-checkbox__label"
              for="id-1"
            >
              Option 1
            </label>
          </div>
          <div
            class="usa-checkbox undefined"
          >
            <input
              class="usa-checkbox__input"
              id="id-2"
              name=""
              type="checkbox"
              value="2"
            />
            <label
              class="usa-checkbox__label"
              for="id-2"
            >
              Option 2
            </label>
          </div>
        </div>
      </div>
    </fieldset>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`radio matches snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <fieldset
        aria-required="true"
        class="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="id-fieldset"
      >
        <legend
          class="usa-sr-only"
          id="fieldset-legend-id-fieldset"
        >
          choice
        </legend>
        <div
          class="grid-gap grid-row margin-top-3"
        >
          <div
            class=""
          >
            <div
              class="usa-radio undefined"
            >
              <input
                class="usa-radio__input"
                id="1"
                name=""
                type="radio"
                value="1"
              />
              <label
                class="usa-radio__label"
                for="1"
              >
                Option 1
              </label>
            </div>
            <div
              class="usa-radio undefined"
            >
              <input
                class="usa-radio__input"
                id="2"
                name=""
                type="radio"
                value="2"
              />
              <label
                class="usa-radio__label"
                for="2"
              >
                Option 2
              </label>
            </div>
          </div>
        </div>
      </fieldset>
    </div>
  </body>,
  "container": <div>
    <fieldset
      aria-required="true"
      class="grid-gap grid-row usa-fieldset
			
			 undefined
			"
      id="id-fieldset"
    >
      <legend
        class="usa-sr-only"
        id="fieldset-legend-id-fieldset"
      >
        choice
      </legend>
      <div
        class="grid-gap grid-row margin-top-3"
      >
        <div
          class=""
        >
          <div
            class="usa-radio undefined"
          >
            <input
              class="usa-radio__input"
              id="1"
              name=""
              type="radio"
              value="1"
            />
            <label
              class="usa-radio__label"
              for="1"
            >
              Option 1
            </label>
          </div>
          <div
            class="usa-radio undefined"
          >
            <input
              class="usa-radio__input"
              id="2"
              name=""
              type="radio"
              value="2"
            />
            <label
              class="usa-radio__label"
              for="2"
            >
              Option 2
            </label>
          </div>
        </div>
      </div>
    </fieldset>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`select matches snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="usa-form-group "
      >
        <div
          class=""
        />
        <label
          class="usa-label"
          for="id"
        >
          choice
        </label>
        <select
          aria-required="true"
          class="usa-select"
          id="id"
          name="id"
        >
          <option
            value=""
          >
            - Select -
          </option>
          <option
            value="1"
          >
            Option 1
          </option>
          <option
            value="2"
          >
            Option 2
          </option>
        </select>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="usa-form-group "
    >
      <div
        class=""
      />
      <label
        class="usa-label"
        for="id"
      >
        choice
      </label>
      <select
        aria-required="true"
        class="usa-select"
        id="id"
        name="id"
      >
        <option
          value=""
        >
          - Select -
        </option>
        <option
          value="1"
        >
          Option 1
        </option>
        <option
          value="2"
        >
          Option 2
        </option>
      </select>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
