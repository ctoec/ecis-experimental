// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Alert Error 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className="usa-alert usa-alert--error grid-row margin-y-4"
    role="alert"
  >
    <div
      className="display-flex flex-fill"
    >
      <div
        className="usa-alert__body grid-col flex-fill"
      >
        <h2
          className="usa-alert__heading"
        >
          Hark, an error!
        </h2>
        <p
          className="usa-alert__text"
        >
          Something's not right.
        </p>
      </div>
      <div
        className="usa-alert__body flex-auto display-flex flex-align-center"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Alert Info 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className="usa-alert usa-alert--info grid-row margin-y-4"
  >
    <div
      className="display-flex flex-fill"
    >
      <div
        className="usa-alert__body grid-col flex-fill"
      >
        <h2
          className="usa-alert__heading"
        >
          Information
        </h2>
        <p
          className="usa-alert__text"
        >
          Neutral text here.
        </p>
      </div>
      <div
        className="usa-alert__body flex-auto display-flex flex-align-center"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Alert Success 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className="usa-alert usa-alert--success grid-row margin-y-4"
  >
    <div
      className="display-flex flex-fill"
    >
      <div
        className="usa-alert__body grid-col flex-fill"
      >
        <h2
          className="usa-alert__heading"
        >
          Success alert!
        </h2>
        <p
          className="usa-alert__text"
        >
          Good job, you.
        </p>
      </div>
      <div
        className="usa-alert__body flex-auto display-flex flex-align-center"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Alert Warning 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className="usa-alert usa-alert--warning grid-row margin-y-4"
  >
    <div
      className="display-flex flex-fill"
    >
      <div
        className="usa-alert__body grid-col flex-fill"
      >
        <h2
          className="usa-alert__heading"
        >
          Watch out!
        </h2>
        <p
          className="usa-alert__text"
        >
          Is that what you meant to do?
        </p>
      </div>
      <div
        className="usa-alert__body flex-auto display-flex flex-align-center"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Button Base 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <button
    className="usa-button usa-button--base"
    onClick={[Function]}
    type="button"
  >
    Click me
  </button>
</div>
`;

exports[`Storyshots Button Default 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <button
    className="usa-button "
    onClick={[Function]}
    type="button"
  >
    Click me
  </button>
</div>
`;

exports[`Storyshots Button Disabled 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <button
    className="usa-button "
    disabled={true}
    onClick={[Function]}
    type="button"
  >
    Click me
  </button>
</div>
`;

exports[`Storyshots Button Secondary 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <button
    className="usa-button usa-button--secondary"
    onClick={[Function]}
    type="button"
  >
    Click me
  </button>
</div>
`;

exports[`Storyshots Button Unstyled 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <button
    className="usa-button usa-button--unstyled"
    onClick={[Function]}
    type="button"
  >
    Click me
  </button>
</div>
`;

exports[`Storyshots ChoiceList Checklist 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
    id="storybook-checklist-fieldset"
  >
    <legend
      className="usa-sr-only"
      id="fieldset-legend-storybook-checklist-fieldset"
    >
      Checklist items
    </legend>
    <div
      className="grid-gap grid-row margin-top-3"
    >
      <div
        className=""
      >
        <div
          className="usa-checkbox undefined"
        >
          <input
            className="usa-checkbox__input"
            defaultChecked={false}
            id="storybook-checklist-one"
            name="storybook-checklist-one"
            onChange={[Function]}
            type="checkbox"
            value="one"
          />
          <label
            className="usa-checkbox__label"
            htmlFor="storybook-checklist-one"
          >
            Option one
          </label>
        </div>
        <div
          className="usa-checkbox undefined"
        >
          <input
            className="usa-checkbox__input"
            defaultChecked={false}
            id="storybook-checklist-two"
            name="storybook-checklist-two"
            onChange={[Function]}
            type="checkbox"
            value="two"
          />
          <label
            className="usa-checkbox__label"
            htmlFor="storybook-checklist-two"
          >
            Option two
          </label>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots ChoiceList Checklist with warning 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="checklist-warning"
    aria-invalid={false}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--warning
			 undefined
			"
    id="storybook-checklist-fieldset"
  >
    <legend
      className="usa-sr-only"
      id="fieldset-legend-storybook-checklist-fieldset"
    >
      Checklist items
    </legend>
    <span
      className="usa-warning-message"
      id="checklist-warning"
      role="status"
    >
      <span
        className="oec-inline-icon oec-inline-icon--incomplete"
      >
        <svg>
          error.svg
        </svg>
        <span
          className="usa-sr-only"
        >
          (
          incomplete
          )
        </span>
      </span>
       
      These fields need your attention
    </span>
    <div
      className="grid-gap grid-row margin-top-3"
    >
      <div
        className=""
      >
        <div
          className="usa-checkbox undefined"
        >
          <input
            className="usa-checkbox__input"
            defaultChecked={false}
            id="storybook-checklist-one"
            name="storybook-checklist-one"
            onChange={[Function]}
            type="checkbox"
            value="one"
          />
          <label
            className="usa-checkbox__label"
            htmlFor="storybook-checklist-one"
          >
            Option one
          </label>
        </div>
        <div
          className="usa-checkbox undefined"
        >
          <input
            className="usa-checkbox__input"
            defaultChecked={false}
            id="storybook-checklist-two"
            name="storybook-checklist-two"
            onChange={[Function]}
            type="checkbox"
            value="two"
          />
          <label
            className="usa-checkbox__label"
            htmlFor="storybook-checklist-two"
          >
            Option two
          </label>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots ChoiceList Radio 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
    id="storybook-checklist-fieldset"
  >
    <legend
      className="usa-sr-only"
      id="fieldset-legend-storybook-checklist-fieldset"
    >
      Checklist items
    </legend>
    <div
      className="grid-gap grid-row margin-top-3"
    >
      <div
        className=""
      >
        <div
          className="usa-radio undefined"
        >
          <input
            checked={false}
            className="usa-radio__input"
            id="one"
            name="storybook-checklist-group"
            onChange={[Function]}
            type="radio"
            value="one"
          />
          <label
            className="usa-radio__label"
            htmlFor="one"
          >
            Option one
          </label>
        </div>
        <div
          className="usa-radio undefined"
        >
          <input
            checked={false}
            className="usa-radio__input"
            id="two"
            name="storybook-checklist-group"
            onChange={[Function]}
            type="radio"
            value="two"
          />
          <label
            className="usa-radio__label"
            htmlFor="two"
          >
            Option two
          </label>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots ChoiceList Radio with error 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="checklis-error"
    aria-invalid={true}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--error
			 undefined
			"
    id="storybook-checklist-fieldset"
  >
    <legend
      className="usa-sr-only"
      id="fieldset-legend-storybook-checklist-fieldset"
    >
      Checklist items
    </legend>
    <span
      className="usa-error-message"
      id="checklis-error"
      role="alert"
    >
      
       
      These fields will block your progress
    </span>
    <div
      className="grid-gap grid-row margin-top-3"
    >
      <div
        className=""
      >
        <div
          className="usa-radio undefined"
        >
          <input
            checked={false}
            className="usa-radio__input"
            id="one"
            name="storybook-checklist-group"
            onChange={[Function]}
            type="radio"
            value="one"
          />
          <label
            className="usa-radio__label"
            htmlFor="one"
          >
            Option one
          </label>
        </div>
        <div
          className="usa-radio undefined"
        >
          <input
            checked={false}
            className="usa-radio__input"
            id="two"
            name="storybook-checklist-group"
            onChange={[Function]}
            type="radio"
            value="two"
          />
          <label
            className="usa-radio__label"
            htmlFor="two"
          >
            Option two
          </label>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots ChoiceList Radio with preselected option 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
    id="storybook-checklist-fieldset"
  >
    <legend
      className="usa-sr-only"
      id="fieldset-legend-storybook-checklist-fieldset"
    >
      Checklist items
    </legend>
    <div
      className="grid-gap grid-row margin-top-3"
    >
      <div
        className=""
      >
        <div
          className="usa-radio undefined"
        >
          <input
            checked={true}
            className="usa-radio__input"
            id="one"
            name="storybook-checklist-group"
            onChange={[Function]}
            type="radio"
            value="one"
          />
          <label
            className="usa-radio__label"
            htmlFor="one"
          >
            Option one
          </label>
        </div>
        <div
          className="usa-radio undefined"
        >
          <input
            checked={false}
            className="usa-radio__input"
            id="two"
            name="storybook-checklist-group"
            onChange={[Function]}
            type="radio"
            value="two"
          />
          <label
            className="usa-radio__label"
            htmlFor="two"
          >
            Option two
          </label>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots ChoiceList Select 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className="usa-form-group"
  >
    <div
      className=""
    />
    <label
      className="usa-label"
      htmlFor="storybook-checklist"
    >
      Select
    </label>
    <select
      className="usa-select"
      id="storybook-checklist"
      name="storybook-checklist"
      onChange={[Function]}
      required={true}
    >
      <option
        value=""
      >
        - Select -
      </option>
      <option
        value="one"
      >
        Option one
      </option>
      <option
        value="two"
      >
        Option two
      </option>
    </select>
  </div>
</div>
`;

exports[`Storyshots ChoiceList Select with other 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className="usa-form-group"
  >
    <div
      className=""
    />
    <label
      className="usa-label"
      htmlFor="storybook-checklist"
    >
      Select
    </label>
    <select
      className="usa-select"
      id="storybook-checklist"
      name="storybook-checklist"
      onChange={[Function]}
      required={true}
    >
      <option
        value=""
      >
        - Select -
      </option>
      <option
        value="one"
      >
        Option one
      </option>
      <option
        value="two"
      >
        Option two
      </option>
      <option
        value="other"
      >
        Other choice
      </option>
    </select>
  </div>
</div>
`;

exports[`Storyshots ChoiceList Select with success 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className="usa-form-group usa-form-group--success"
  >
    <div
      className=""
    />
    <label
      className="usa-label usa-label--success"
      htmlFor="storybook-checklist"
    >
      Select
    </label>
    <span
      className="usa-success-message"
      id="checklist-success"
      role="status"
    >
      
       
      These fields were validated woo
    </span>
    <select
      aria-describedby="checklist-success"
      aria-invalid={false}
      className="usa-select usa-input--success"
      id="storybook-checklist"
      name="storybook-checklist"
      onChange={[Function]}
      required={true}
    >
      <option
        value=""
      >
        - Select -
      </option>
      <option
        value="one"
      >
        Option one
      </option>
      <option
        value="two"
      >
        Option two
      </option>
    </select>
  </div>
</div>
`;

exports[`Storyshots ChoiceList Single checkbox 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className="usa-form-group"
  >
    <div
      className="margin-top-3"
    />
    <div
      className="usa-checkbox undefined"
    >
      <input
        className="usa-checkbox__input"
        defaultChecked={false}
        id="storybook-checklist-one"
        name="storybook-checklist-one"
        onChange={[Function]}
        type="checkbox"
        value="one"
      />
      <label
        className="usa-checkbox__label"
        htmlFor="storybook-checklist-one"
      >
        Option one
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Date input Default 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="dateinput-example-start-date-hint"
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
    id="dateinput-example-start-date"
  >
    <legend
      className="usa-label"
      id="fieldset-legend-dateinput-example-start-date"
    >
      Date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04 28 1986
    </span>
    <div
      className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
    >
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-month-start-date"
          >
            Month
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="10"
            id="dateinput-example-month-start-date"
            max={12}
            maxLength={2}
            min={1}
            name="dateinput-example-month-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-day-start-date"
          >
            Day
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="30"
            id="dateinput-example-day-start-date"
            max={31}
            maxLength={2}
            min={1}
            name="dateinput-example-day-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-year-start-date"
          >
            Year
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="2019"
            id="dateinput-example-year-start-date"
            max={2100}
            maxLength={4}
            min={1990}
            name="dateinput-example-year-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
       
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Date input Disabled day input 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="dateinput-example-start-date-hint"
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
    id="dateinput-example-start-date"
  >
    <legend
      className="usa-label"
      id="fieldset-legend-dateinput-example-start-date"
    >
      Date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04 28 1986
    </span>
    <div
      className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
    >
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-month-start-date"
          >
            Month
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="10"
            disabled={true}
            id="dateinput-example-month-start-date"
            max={12}
            maxLength={2}
            min={1}
            name="dateinput-example-month-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-day-start-date"
          >
            Day
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="30"
            disabled={true}
            id="dateinput-example-day-start-date"
            max={31}
            maxLength={2}
            min={1}
            name="dateinput-example-day-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-year-start-date"
          >
            Year
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="2019"
            disabled={true}
            id="dateinput-example-year-start-date"
            max={2100}
            maxLength={4}
            min={1990}
            name="dateinput-example-year-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
       
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Date input Disabled range input 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="dateinput-example-hint"
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
    id="dateinput-example"
  >
    <legend
      className="usa-label"
      id="fieldset-legend-dateinput-example"
    >
      Date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04 28 1986
    </span>
    <div
      className="grid-gap grid-row flex-row display-flex flex-align-end"
    >
      <fieldset
        aria-required={true}
        className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="dateinput-example-start-date"
      >
        <legend
          className="usa-label"
          id="fieldset-legend-dateinput-example-start-date"
        >
          Date start
        </legend>
        
        <div
          className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
        >
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-month-start-date"
              >
                Month
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="10"
                disabled={true}
                id="dateinput-example-month-start-date"
                max={12}
                maxLength={2}
                min={1}
                name="dateinput-example-month-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-day-start-date"
              >
                Day
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="30"
                disabled={true}
                id="dateinput-example-day-start-date"
                max={31}
                maxLength={2}
                min={1}
                name="dateinput-example-day-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-year-start-date"
              >
                Year
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="2019"
                disabled={true}
                id="dateinput-example-year-start-date"
                max={2100}
                maxLength={4}
                min={1990}
                name="dateinput-example-year-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
           
        </div>
      </fieldset>
      <fieldset
        aria-required={true}
        className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="dateinput-example-end-date"
      >
        <legend
          className="usa-label"
          id="fieldset-legend-dateinput-example-end-date"
        >
          Date end
        </legend>
        <div
          className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
        >
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-month-end-date"
              >
                Month
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="10"
                disabled={true}
                id="dateinput-example-month-end-date"
                max={12}
                maxLength={2}
                min={1}
                name="dateinput-example-month-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-day-end-date"
              >
                Day
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="30"
                disabled={true}
                id="dateinput-example-day-end-date"
                max={31}
                maxLength={2}
                min={1}
                name="dateinput-example-day-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-year-end-date"
              >
                Year
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="2019"
                disabled={true}
                id="dateinput-example-year-end-date"
                max={2100}
                maxLength={4}
                min={1990}
                name="dateinput-example-year-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
        </div>
      </fieldset>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Date input Error 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="DateInput-error"
    aria-invalid={true}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--error
			 undefined
			"
    id="dateinput-example-start-date"
  >
    <legend
      className="usa-label usa-label--error"
      id="fieldset-legend-dateinput-example-start-date"
    >
      Date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04 28 1986
    </span>
    <span
      className="usa-error-message"
      id="DateInput-error"
      role="alert"
    >
      
       
      Pick a better date
    </span>
    <div
      className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
    >
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-month-start-date"
          >
            Month
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="10"
            id="dateinput-example-month-start-date"
            max={12}
            maxLength={2}
            min={1}
            name="dateinput-example-month-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-day-start-date"
          >
            Day
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="30"
            id="dateinput-example-day-start-date"
            max={31}
            maxLength={2}
            min={1}
            name="dateinput-example-day-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-year-start-date"
          >
            Year
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="2019"
            id="dateinput-example-year-start-date"
            max={2100}
            maxLength={4}
            min={1990}
            name="dateinput-example-year-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
       
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Date input Error with range 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="DateInput-error"
    aria-invalid={true}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--error
			 undefined
			"
    id="dateinput-example"
  >
    <legend
      className="usa-label usa-label--error"
      id="fieldset-legend-dateinput-example"
    >
      Date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04 28 1986
    </span>
    <span
      className="usa-error-message"
      id="DateInput-error"
      role="alert"
    >
      
       
      Pick a better date
    </span>
    <div
      className="grid-gap grid-row flex-row display-flex flex-align-end"
    >
      <fieldset
        aria-required={true}
        className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="dateinput-example-start-date"
      >
        <legend
          className="usa-label"
          id="fieldset-legend-dateinput-example-start-date"
        >
          Date start
        </legend>
        
        <div
          className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
        >
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-month-start-date"
              >
                Month
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="10"
                disabled={true}
                id="dateinput-example-month-start-date"
                max={12}
                maxLength={2}
                min={1}
                name="dateinput-example-month-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-day-start-date"
              >
                Day
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="30"
                disabled={true}
                id="dateinput-example-day-start-date"
                max={31}
                maxLength={2}
                min={1}
                name="dateinput-example-day-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-year-start-date"
              >
                Year
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="2019"
                disabled={true}
                id="dateinput-example-year-start-date"
                max={2100}
                maxLength={4}
                min={1990}
                name="dateinput-example-year-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
           
        </div>
      </fieldset>
      <fieldset
        aria-required={true}
        className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="dateinput-example-end-date"
      >
        <legend
          className="usa-label"
          id="fieldset-legend-dateinput-example-end-date"
        >
          Date end
        </legend>
        <div
          className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
        >
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-month-end-date"
              >
                Month
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="10"
                disabled={true}
                id="dateinput-example-month-end-date"
                max={12}
                maxLength={2}
                min={1}
                name="dateinput-example-month-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-day-end-date"
              >
                Day
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="30"
                disabled={true}
                id="dateinput-example-day-end-date"
                max={31}
                maxLength={2}
                min={1}
                name="dateinput-example-day-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-year-end-date"
              >
                Year
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="2019"
                disabled={true}
                id="dateinput-example-year-end-date"
                max={2100}
                maxLength={4}
                min={1990}
                name="dateinput-example-year-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
        </div>
      </fieldset>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Date input Range input 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="dateinput-example-hint"
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
    id="dateinput-example"
  >
    <legend
      className="usa-label"
      id="fieldset-legend-dateinput-example"
    >
      Date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04 28 1986
    </span>
    <div
      className="grid-gap grid-row flex-row display-flex flex-align-end"
    >
      <fieldset
        aria-required={true}
        className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="dateinput-example-start-date"
      >
        <legend
          className="usa-label"
          id="fieldset-legend-dateinput-example-start-date"
        >
          Date start
        </legend>
        
        <div
          className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
        >
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-month-start-date"
              >
                Month
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="10"
                id="dateinput-example-month-start-date"
                max={12}
                maxLength={2}
                min={1}
                name="dateinput-example-month-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-day-start-date"
              >
                Day
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="30"
                id="dateinput-example-day-start-date"
                max={31}
                maxLength={2}
                min={1}
                name="dateinput-example-day-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-year-start-date"
              >
                Year
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="2019"
                id="dateinput-example-year-start-date"
                max={2100}
                maxLength={4}
                min={1990}
                name="dateinput-example-year-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
           
        </div>
      </fieldset>
      <fieldset
        aria-required={true}
        className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="dateinput-example-end-date"
      >
        <legend
          className="usa-label"
          id="fieldset-legend-dateinput-example-end-date"
        >
          Date end
        </legend>
        <div
          className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
        >
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-month-end-date"
              >
                Month
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="10"
                id="dateinput-example-month-end-date"
                max={12}
                maxLength={2}
                min={1}
                name="dateinput-example-month-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-day-end-date"
              >
                Day
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="30"
                id="dateinput-example-day-end-date"
                max={31}
                maxLength={2}
                min={1}
                name="dateinput-example-day-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-year-end-date"
              >
                Year
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="2019"
                id="dateinput-example-year-end-date"
                max={2100}
                maxLength={4}
                min={1990}
                name="dateinput-example-year-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
        </div>
      </fieldset>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Date input Success 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="DateInput-success"
    aria-invalid={false}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--success
			 undefined
			"
    id="dateinput-example-start-date"
  >
    <legend
      className="usa-label usa-label--success"
      id="fieldset-legend-dateinput-example-start-date"
    >
      Date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04 28 1986
    </span>
    <span
      className="usa-success-message"
      id="DateInput-success"
      role="status"
    >
      
       
      You did good
    </span>
    <div
      className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
    >
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-month-start-date"
          >
            Month
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="10"
            id="dateinput-example-month-start-date"
            max={12}
            maxLength={2}
            min={1}
            name="dateinput-example-month-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-day-start-date"
          >
            Day
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="30"
            id="dateinput-example-day-start-date"
            max={31}
            maxLength={2}
            min={1}
            name="dateinput-example-day-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-year-start-date"
          >
            Year
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="2019"
            id="dateinput-example-year-start-date"
            max={2100}
            maxLength={4}
            min={1990}
            name="dateinput-example-year-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
       
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Date input Success with range 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="DateInput-success"
    aria-invalid={false}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--success
			 undefined
			"
    id="dateinput-example"
  >
    <legend
      className="usa-label usa-label--success"
      id="fieldset-legend-dateinput-example"
    >
      Date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04 28 1986
    </span>
    <span
      className="usa-success-message"
      id="DateInput-success"
      role="status"
    >
      
       
      You did good
    </span>
    <div
      className="grid-gap grid-row flex-row display-flex flex-align-end"
    >
      <fieldset
        aria-required={true}
        className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="dateinput-example-start-date"
      >
        <legend
          className="usa-label"
          id="fieldset-legend-dateinput-example-start-date"
        >
          Date start
        </legend>
        
        <div
          className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
        >
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-month-start-date"
              >
                Month
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="10"
                id="dateinput-example-month-start-date"
                max={12}
                maxLength={2}
                min={1}
                name="dateinput-example-month-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-day-start-date"
              >
                Day
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="30"
                id="dateinput-example-day-start-date"
                max={31}
                maxLength={2}
                min={1}
                name="dateinput-example-day-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-year-start-date"
              >
                Year
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="2019"
                id="dateinput-example-year-start-date"
                max={2100}
                maxLength={4}
                min={1990}
                name="dateinput-example-year-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
           
        </div>
      </fieldset>
      <fieldset
        aria-required={true}
        className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="dateinput-example-end-date"
      >
        <legend
          className="usa-label"
          id="fieldset-legend-dateinput-example-end-date"
        >
          Date end
        </legend>
        <div
          className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
        >
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-month-end-date"
              >
                Month
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="10"
                id="dateinput-example-month-end-date"
                max={12}
                maxLength={2}
                min={1}
                name="dateinput-example-month-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-day-end-date"
              >
                Day
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="30"
                id="dateinput-example-day-end-date"
                max={31}
                maxLength={2}
                min={1}
                name="dateinput-example-day-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-year-end-date"
              >
                Year
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="2019"
                id="dateinput-example-year-end-date"
                max={2100}
                maxLength={4}
                min={1990}
                name="dateinput-example-year-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
        </div>
      </fieldset>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Date input Warning 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="DateInput-warning"
    aria-invalid={false}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--warning
			 undefined
			"
    id="dateinput-example-start-date"
  >
    <legend
      className="usa-label usa-label--warning"
      id="fieldset-legend-dateinput-example-start-date"
    >
      Date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04 28 1986
    </span>
    <span
      className="usa-warning-message"
      id="DateInput-warning"
      role="status"
    >
      <span
        className="oec-inline-icon oec-inline-icon--incomplete"
      >
        <svg>
          error.svg
        </svg>
        <span
          className="usa-sr-only"
        >
          (
          incomplete
          )
        </span>
      </span>
       
      Meh, fine
    </span>
    <div
      className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
    >
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-month-start-date"
          >
            Month
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="10"
            id="dateinput-example-month-start-date"
            max={12}
            maxLength={2}
            min={1}
            name="dateinput-example-month-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-day-start-date"
          >
            Day
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="30"
            id="dateinput-example-day-start-date"
            max={31}
            maxLength={2}
            min={1}
            name="dateinput-example-day-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
      <div>
        <div
          className="oec-date-input__input usa-form-group"
        >
          <label
            className="usa-label"
            htmlFor="dateinput-example-year-start-date"
          >
            Year
             
          </label>
          <input
            className="usa-input usa-input--inline"
            defaultValue="2019"
            id="dateinput-example-year-start-date"
            max={2100}
            maxLength={4}
            min={1990}
            name="dateinput-example-year-start-date"
            onBlur={[Function]}
            onChange={[Function]}
            required={true}
            type="number"
          />
        </div>
      </div>
       
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Date input Warning with range 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="DateInput-warning"
    aria-invalid={false}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--warning
			 undefined
			"
    id="dateinput-example"
  >
    <legend
      className="usa-label usa-label--warning"
      id="fieldset-legend-dateinput-example"
    >
      Date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04 28 1986
    </span>
    <span
      className="usa-warning-message"
      id="DateInput-warning"
      role="status"
    >
      <span
        className="oec-inline-icon oec-inline-icon--incomplete"
      >
        <svg>
          error.svg
        </svg>
        <span
          className="usa-sr-only"
        >
          (
          incomplete
          )
        </span>
      </span>
       
      Meh, fine
    </span>
    <div
      className="grid-gap grid-row flex-row display-flex flex-align-end"
    >
      <fieldset
        aria-required={true}
        className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="dateinput-example-start-date"
      >
        <legend
          className="usa-label"
          id="fieldset-legend-dateinput-example-start-date"
        >
          Date start
        </legend>
        
        <div
          className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
        >
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-month-start-date"
              >
                Month
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="10"
                id="dateinput-example-month-start-date"
                max={12}
                maxLength={2}
                min={1}
                name="dateinput-example-month-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-day-start-date"
              >
                Day
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="30"
                id="dateinput-example-day-start-date"
                max={31}
                maxLength={2}
                min={1}
                name="dateinput-example-day-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-year-start-date"
              >
                Year
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="2019"
                id="dateinput-example-year-start-date"
                max={2100}
                maxLength={4}
                min={1990}
                name="dateinput-example-year-start-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
           
        </div>
      </fieldset>
      <fieldset
        aria-required={true}
        className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
        id="dateinput-example-end-date"
      >
        <legend
          className="usa-label"
          id="fieldset-legend-dateinput-example-end-date"
        >
          Date end
        </legend>
        <div
          className="grid-gap grid-row flex-row flex-align-end usa-memorable-date"
        >
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-month-end-date"
              >
                Month
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="10"
                id="dateinput-example-month-end-date"
                max={12}
                maxLength={2}
                min={1}
                name="dateinput-example-month-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-day-end-date"
              >
                Day
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="30"
                id="dateinput-example-day-end-date"
                max={31}
                maxLength={2}
                min={1}
                name="dateinput-example-day-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
          <div>
            <div
              className="oec-date-input__input usa-form-group"
            >
              <label
                className="usa-label"
                htmlFor="dateinput-example-year-end-date"
              >
                Year
                 
              </label>
              <input
                className="usa-input usa-input--inline"
                defaultValue="2019"
                id="dateinput-example-year-end-date"
                max={2100}
                maxLength={4}
                min={1990}
                name="dateinput-example-year-end-date"
                onBlur={[Function]}
                onChange={[Function]}
                required={true}
                type="number"
              />
            </div>
          </div>
        </div>
      </fieldset>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots DatePicker Default 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group "
  >
    <label
      className="usa-label "
      htmlFor="default-datepicker-date"
    >
      Pick a date
    </label>
    <span
      className="usa-hint text-italic display-block"
    >
      For example: 04/28/1986
    </span>
    <span
      className="oec-date-input"
    >
      <div
        className="SingleDatePicker SingleDatePicker_1"
      >
        <div>
          <div
            className="SingleDatePickerInput SingleDatePickerInput_1"
          >
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-default-datepicker-date"
                aria-label="Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="default-datepicker-date"
                name="default-datepicker-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-default-datepicker-date"
              >
                Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
          </div>
        </div>
      </div>
    </span>
  </div>
</div>
`;

exports[`Storyshots DatePicker Disabled 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group "
  >
    <label
      className="usa-label "
      htmlFor="disabled-datepicker-date"
    >
      Pick a date
    </label>
    <span
      className="usa-hint text-italic display-block"
    >
      For example: 04/28/1986
    </span>
    <span
      className="oec-date-input"
    >
      <div
        className="SingleDatePicker SingleDatePicker_1"
      >
        <div>
          <div
            className="SingleDatePickerInput SingleDatePickerInput_1 SingleDatePickerInput__disabled SingleDatePickerInput__disabled_2"
          >
            <div
              className="DateInput DateInput_1 DateInput__disabled DateInput__disabled_2"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-disabled-datepicker-date"
                aria-label="Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1 DateInput_input__disabled DateInput_input__disabled_2"
                disabled={true}
                id="disabled-datepicker-date"
                name="disabled-datepicker-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-disabled-datepicker-date"
              >
                Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
          </div>
        </div>
      </div>
    </span>
  </div>
</div>
`;

exports[`Storyshots DatePicker Disabled with range 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="disabled-range-datepicker-hint"
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
    id="disabled-range-datepicker"
  >
    <legend
      className="usa-label"
      id="fieldset-legend-disabled-range-datepicker"
    >
      Pick a date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04/28/1986
    </span>
    <div
      className="grid-gap grid-row undefined"
    >
      <div
        className="DateRangePicker DateRangePicker_1"
      >
        <div>
          <div
            className="DateRangePickerInput DateRangePickerInput_1 DateRangePickerInput__disabled DateRangePickerInput__disabled_2"
          >
            <div
              className="DateInput DateInput_1 DateInput__disabled DateInput__disabled_2"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-disabled-range-datepicker-start-date"
                aria-label="Start Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1 DateInput_input__disabled DateInput_input__disabled_2"
                disabled={true}
                id="disabled-range-datepicker-start-date"
                name="disabled-range-datepicker-start-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Start Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-disabled-range-datepicker-start-date"
              >
                Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
            <div
              aria-hidden="true"
              className="DateRangePickerInput_arrow DateRangePickerInput_arrow_1"
              role="presentation"
            >
              <svg
                className="DateRangePickerInput_arrow_svg DateRangePickerInput_arrow_svg_1"
                focusable="false"
                viewBox="0 0 1000 1000"
              >
                <path
                  d="M694 242l249 250c12 11 12 21 1 32L694 773c-5 5-10 7-16 7s-11-2-16-7c-11-11-11-21 0-32l210-210H68c-13 0-23-10-23-23s10-23 23-23h806L662 275c-21-22 11-54 32-33z"
                />
              </svg>
            </div>
            <div
              className="DateInput DateInput_1 DateInput__disabled DateInput__disabled_2"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-disabled-range-datepicker-end-date"
                aria-label="End Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1 DateInput_input__disabled DateInput_input__disabled_2"
                disabled={true}
                id="disabled-range-datepicker-end-date"
                name="disabled-range-datepicker-end-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="End Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-disabled-range-datepicker-end-date"
              >
                Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots DatePicker Error 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group  usa-form-group--error"
  >
    <label
      className="usa-label  usa-label--error"
      htmlFor="error-datepicker-date"
    >
      Pick a date
    </label>
    <span
      className="usa-hint text-italic display-block"
    >
      For example: 04/28/1986
    </span>
    <span
      className="usa-error-message"
      id="datepicker-error"
      role="alert"
    >
      
       
      Pick a better date
    </span>
    <span
      aria-describedby="datepicker-error"
      className="oec-date-input oec-date-input--error"
    >
      <div
        className="SingleDatePicker SingleDatePicker_1"
      >
        <div>
          <div
            className="SingleDatePickerInput SingleDatePickerInput_1"
          >
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-error-datepicker-date"
                aria-label="Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="error-datepicker-date"
                name="error-datepicker-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-error-datepicker-date"
              >
                Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
          </div>
        </div>
      </div>
    </span>
  </div>
</div>
`;

exports[`Storyshots DatePicker Error with range 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="datepicker-error"
    aria-invalid={true}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--error
			 undefined
			"
    id="error-datepicker"
  >
    <legend
      className="usa-label usa-label--error"
      id="fieldset-legend-error-datepicker"
    >
      Pick a date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04/28/1986
    </span>
    <span
      className="usa-error-message"
      id="datepicker-error"
      role="alert"
    >
      
       
      Pick a better date
    </span>
    <div
      className="grid-gap grid-row undefined"
    >
      <div
        className="DateRangePicker DateRangePicker_1"
      >
        <div>
          <div
            className="DateRangePickerInput DateRangePickerInput_1"
          >
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-error-datepicker-start-date"
                aria-label="Start Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="error-datepicker-start-date"
                name="error-datepicker-start-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Start Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-error-datepicker-start-date"
              >
                Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
            <div
              aria-hidden="true"
              className="DateRangePickerInput_arrow DateRangePickerInput_arrow_1"
              role="presentation"
            >
              <svg
                className="DateRangePickerInput_arrow_svg DateRangePickerInput_arrow_svg_1"
                focusable="false"
                viewBox="0 0 1000 1000"
              >
                <path
                  d="M694 242l249 250c12 11 12 21 1 32L694 773c-5 5-10 7-16 7s-11-2-16-7c-11-11-11-21 0-32l210-210H68c-13 0-23-10-23-23s10-23 23-23h806L662 275c-21-22 11-54 32-33z"
                />
              </svg>
            </div>
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-error-datepicker-end-date"
                aria-label="End Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="error-datepicker-end-date"
                name="error-datepicker-end-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="End Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-error-datepicker-end-date"
              >
                Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots DatePicker Optional 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group "
  >
    <label
      className="usa-label "
      htmlFor="optional-datepicker-date"
    >
      Pick a date
    </label>
    <span
      className="usa-hint text-italic display-block"
    >
      For example: 04/28/1986 (optional)
    </span>
    <span
      className="oec-date-input"
    >
      <div
        className="SingleDatePicker SingleDatePicker_1"
      >
        <div>
          <div
            className="SingleDatePickerInput SingleDatePickerInput_1"
          >
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-optional-datepicker-date"
                aria-label="Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="optional-datepicker-date"
                name="optional-datepicker-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-optional-datepicker-date"
              >
                Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
          </div>
        </div>
      </div>
    </span>
  </div>
</div>
`;

exports[`Storyshots DatePicker Range 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="byrange-datepicker-hint"
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
    id="byrange-datepicker"
  >
    <legend
      className="usa-label"
      id="fieldset-legend-byrange-datepicker"
    >
      Pick a date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04/28/1986
    </span>
    <div
      className="grid-gap grid-row undefined"
    >
      <div
        className="DateRangePicker DateRangePicker_1"
      >
        <div>
          <div
            className="DateRangePickerInput DateRangePickerInput_1"
          >
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-byrange-datepicker-start-date"
                aria-label="Start Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="byrange-datepicker-start-date"
                name="byrange-datepicker-start-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Start Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-byrange-datepicker-start-date"
              >
                Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
            <div
              aria-hidden="true"
              className="DateRangePickerInput_arrow DateRangePickerInput_arrow_1"
              role="presentation"
            >
              <svg
                className="DateRangePickerInput_arrow_svg DateRangePickerInput_arrow_svg_1"
                focusable="false"
                viewBox="0 0 1000 1000"
              >
                <path
                  d="M694 242l249 250c12 11 12 21 1 32L694 773c-5 5-10 7-16 7s-11-2-16-7c-11-11-11-21 0-32l210-210H68c-13 0-23-10-23-23s10-23 23-23h806L662 275c-21-22 11-54 32-33z"
                />
              </svg>
            </div>
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-byrange-datepicker-end-date"
                aria-label="End Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="byrange-datepicker-end-date"
                name="byrange-datepicker-end-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="End Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-byrange-datepicker-end-date"
              >
                Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots DatePicker Success 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group  usa-form-group--success"
  >
    <label
      className="usa-label  usa-label--success"
      htmlFor="error-datepicker-date"
    >
      Pick a date
    </label>
    <span
      className="usa-hint text-italic display-block"
    >
      For example: 04/28/1986
    </span>
    <span
      className="usa-success-message"
      id="datepicker-success"
      role="status"
    >
      
       
      You did good
    </span>
    <span
      aria-describedby="datepicker-success"
      className="oec-date-input oec-date-input--success"
    >
      <div
        className="SingleDatePicker SingleDatePicker_1"
      >
        <div>
          <div
            className="SingleDatePickerInput SingleDatePickerInput_1"
          >
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-error-datepicker-date"
                aria-label="Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="error-datepicker-date"
                name="error-datepicker-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-error-datepicker-date"
              >
                Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
          </div>
        </div>
      </div>
    </span>
  </div>
</div>
`;

exports[`Storyshots DatePicker Success with range 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="datepicker-success"
    aria-invalid={false}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--success
			 undefined
			"
    id="error-datepicker"
  >
    <legend
      className="usa-label usa-label--success"
      id="fieldset-legend-error-datepicker"
    >
      Pick a date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04/28/1986
    </span>
    <span
      className="usa-success-message"
      id="datepicker-success"
      role="status"
    >
      
       
      You did good
    </span>
    <div
      className="grid-gap grid-row undefined"
    >
      <div
        className="DateRangePicker DateRangePicker_1"
      >
        <div>
          <div
            className="DateRangePickerInput DateRangePickerInput_1"
          >
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-error-datepicker-start-date"
                aria-label="Start Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="error-datepicker-start-date"
                name="error-datepicker-start-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Start Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-error-datepicker-start-date"
              >
                Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
            <div
              aria-hidden="true"
              className="DateRangePickerInput_arrow DateRangePickerInput_arrow_1"
              role="presentation"
            >
              <svg
                className="DateRangePickerInput_arrow_svg DateRangePickerInput_arrow_svg_1"
                focusable="false"
                viewBox="0 0 1000 1000"
              >
                <path
                  d="M694 242l249 250c12 11 12 21 1 32L694 773c-5 5-10 7-16 7s-11-2-16-7c-11-11-11-21 0-32l210-210H68c-13 0-23-10-23-23s10-23 23-23h806L662 275c-21-22 11-54 32-33z"
                />
              </svg>
            </div>
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-error-datepicker-end-date"
                aria-label="End Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="error-datepicker-end-date"
                name="error-datepicker-end-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="End Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-error-datepicker-end-date"
              >
                Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots DatePicker Warning 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group  usa-form-group--warning"
  >
    <label
      className="usa-label  usa-label--warning"
      htmlFor="error-datepicker-date"
    >
      Pick a date
    </label>
    <span
      className="usa-hint text-italic display-block"
    >
      For example: 04/28/1986
    </span>
    <span
      className="usa-warning-message"
      id="datepicker-warning"
      role="status"
    >
      <span
        className="oec-inline-icon oec-inline-icon--incomplete"
      >
        <svg>
          error.svg
        </svg>
        <span
          className="usa-sr-only"
        >
          (
          incomplete
          )
        </span>
      </span>
       
      Meh, fine
    </span>
    <span
      aria-describedby="datepicker-warning"
      className="oec-date-input oec-date-input--warning"
    >
      <div
        className="SingleDatePicker SingleDatePicker_1"
      >
        <div>
          <div
            className="SingleDatePickerInput SingleDatePickerInput_1"
          >
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-error-datepicker-date"
                aria-label="Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="error-datepicker-date"
                name="error-datepicker-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-error-datepicker-date"
              >
                Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
          </div>
        </div>
      </div>
    </span>
  </div>
</div>
`;

exports[`Storyshots DatePicker Warning with range 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="datepicker-warning"
    aria-invalid={false}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--warning
			 undefined
			"
    id="error-datepicker"
  >
    <legend
      className="usa-label usa-label--warning"
      id="fieldset-legend-error-datepicker"
    >
      Pick a date
    </legend>
    <span
      className="usa-hint text-italic"
    >
      For example: 04/28/1986
    </span>
    <span
      className="usa-warning-message"
      id="datepicker-warning"
      role="status"
    >
      <span
        className="oec-inline-icon oec-inline-icon--incomplete"
      >
        <svg>
          error.svg
        </svg>
        <span
          className="usa-sr-only"
        >
          (
          incomplete
          )
        </span>
      </span>
       
      Meh, fine
    </span>
    <div
      className="grid-gap grid-row undefined"
    >
      <div
        className="DateRangePicker DateRangePicker_1"
      >
        <div>
          <div
            className="DateRangePickerInput DateRangePickerInput_1"
          >
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-error-datepicker-start-date"
                aria-label="Start Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="error-datepicker-start-date"
                name="error-datepicker-start-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Start Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-error-datepicker-start-date"
              >
                Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
            <div
              aria-hidden="true"
              className="DateRangePickerInput_arrow DateRangePickerInput_arrow_1"
              role="presentation"
            >
              <svg
                className="DateRangePickerInput_arrow_svg DateRangePickerInput_arrow_svg_1"
                focusable="false"
                viewBox="0 0 1000 1000"
              >
                <path
                  d="M694 242l249 250c12 11 12 21 1 32L694 773c-5 5-10 7-16 7s-11-2-16-7c-11-11-11-21 0-32l210-210H68c-13 0-23-10-23-23s10-23 23-23h806L662 275c-21-22 11-54 32-33z"
                />
              </svg>
            </div>
            <div
              className="DateInput DateInput_1"
            >
              <input
                aria-describedby="DateInput__screen-reader-message-error-datepicker-end-date"
                aria-label="End Date"
                autoComplete="off"
                className="DateInput_input DateInput_input_1"
                disabled={false}
                id="error-datepicker-end-date"
                name="error-datepicker-end-date"
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="End Date"
                readOnly={false}
                required={false}
                type="text"
                value="10/30/2019"
              />
              <p
                className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                id="DateInput__screen-reader-message-error-datepicker-end-date"
              >
                Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots DirectionalLink Back arrow 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <a
    className="oec-directional-link"
    href="/"
    onClick={[Function]}
  >
    <svg
      className="oec-directional-link__arrow oec-directional-link__arrow--direction-left oec-directional-link__arrow--side-left"
    >
      arrowRight.svg
    </svg>
    Look at the stuff you were looking at before
  </a>
</div>
`;

exports[`Storyshots DirectionalLink Down arrow 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <a
    className="oec-directional-link"
    href="/"
    onClick={[Function]}
  >
    <svg
      className="oec-directional-link__arrow oec-directional-link__arrow--direction-down oec-directional-link__arrow--side-left"
    >
      arrowRight.svg
    </svg>
    Check out our sweet footer
  </a>
</div>
`;

exports[`Storyshots DirectionalLink Forward arrow 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <a
    className="oec-directional-link"
    href="/"
    onClick={[Function]}
  >
    See the next thing in this series
    <svg
      className="oec-directional-link__arrow oec-directional-link__arrow--direction-right oec-directional-link__arrow--side-right"
    >
      arrowRight.svg
    </svg>
  </a>
</div>
`;

exports[`Storyshots DirectionalLink Up arrow 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <a
    className="oec-directional-link"
    href="/"
    onClick={[Function]}
  >
    <svg
      className="oec-directional-link__arrow oec-directional-link__arrow--direction-up oec-directional-link__arrow--side-left"
    >
      arrowRight.svg
    </svg>
    Look at stuff at the top of the page
  </a>
</div>
`;

exports[`Storyshots FieldSet Default 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
    id="default-fieldset"
  >
    <legend
      className="usa-sr-only"
      id="fieldset-legend-default-fieldset"
    >
      field set
    </legend>
    <div
      className="grid-gap grid-row undefined"
    >
      <p>
        I'm inside a field set!
      </p>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots FieldSet Show legend 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			
			 undefined
			"
    id="show-legend-fieldset"
  >
    <legend
      className="usa-label"
      id="fieldset-legend-show-legend-fieldset"
    >
      Field set
    </legend>
    <div
      className="grid-gap grid-row undefined"
    >
      <p>
        I'm inside a field set!
      </p>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots FieldSet With error 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="fieldset-error"
    aria-invalid={true}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--error
			 undefined
			"
    id="error-fieldset"
  >
    <legend
      className="usa-sr-only"
      id="fieldset-legend-error-fieldset"
    >
      Error field set
    </legend>
    <span
      className="usa-error-message"
      id="fieldset-error"
      role="alert"
    >
      
       
      These fields will block your progress!
    </span>
    <div
      className="grid-gap grid-row undefined"
    >
      <p>
         Uh oh! 
      </p>
      <p>
         Bad stuff happening here! 
      </p>
      <p>
         Fix it! 
      </p>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots FieldSet With success 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="fieldset-success"
    aria-invalid={false}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--success
			 undefined
			"
    id="success-fieldset"
  >
    <legend
      className="usa-sr-only"
      id="fieldset-legend-success-fieldset"
    >
      Success field set
    </legend>
    <span
      className="usa-success-message"
      id="fieldset-success"
      role="status"
    >
      
       
      These fields are filled out and validated yay!
    </span>
    <div
      className="grid-gap grid-row undefined"
    >
      <p>
         Wow! 
      </p>
      <p>
         You're so smart! 
      </p>
      <p>
         What great form input! 
      </p>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots FieldSet With warning 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <fieldset
    aria-describedby="fieldset-warning"
    aria-invalid={false}
    aria-required={true}
    className="grid-gap grid-row usa-fieldset
			 usa-fieldset--warning
			 undefined
			"
    id="warning-fieldset"
  >
    <legend
      className="usa-sr-only"
      id="fieldset-legend-warning-fieldset"
    >
      Warning field set
    </legend>
    <span
      className="usa-warning-message"
      id="fieldset-warning"
      role="status"
    >
      <span
        className="oec-inline-icon oec-inline-icon--incomplete"
      >
        <svg>
          error.svg
        </svg>
        <span
          className="usa-sr-only"
        >
          (
          incomplete
          )
        </span>
      </span>
       
      These fields need your attention!
    </span>
    <div
      className="grid-gap grid-row undefined"
    >
      <p>
         Oh no! 
      </p>
      <p>
         We have warnings! 
      </p>
      <p>
         Pay attention! 
      </p>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Header Logged in 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=""
  >
    <div
      className="usa-overlay"
      onClick={[Function]}
    />
    <header
      className="usa-header usa-header--extended"
      role="banner"
    >
      <div
        className="usa-navbar"
      >
        <div
          className="usa-logo"
          id="extended-logo"
        >
          <a
            aria-label="Hello world! home"
            href="/"
            onClick={[Function]}
          >
            <em
              className="usa-logo__text"
            >
              Hello world!
            </em>
          </a>
        </div>
        <button
          className="usa-menu-btn"
          onClick={[Function]}
        >
          Menu
        </button>
      </div>
      <nav
        className="usa-nav"
        role="navigation"
      >
        <div
          className="usa-nav__inner"
        >
          <button
            className="usa-nav__close"
            onClick={[Function]}
          >
            <img
              alt="close"
              src="close.svg"
            />
          </button>
          <ul
            className="usa-nav__primary usa-accordion"
          >
            <li
              className="usa-nav__primary-item"
            >
              <a
                className="usa-nav__link usa-current"
                href="/"
                onClick={[Function]}
              >
                <span>
                  Active section
                </span>
              </a>
            </li>
            <li
              className="usa-nav__primary-item"
            >
              <a
                className="usa-nav__link"
                href="/another"
                onClick={[Function]}
              >
                <span>
                  Another section
                </span>
              </a>
            </li>
            <li
              className="usa-nav__primary-item"
            >
              <a
                className="usa-nav__link"
                href="/attention"
                onClick={[Function]}
              >
                <span>
                  Attention needed
                  <span
                    className="attention-needed"
                  >
                     •
                    <span
                      className="usa-sr-only"
                    >
                       (attention needed)
                    </span>
                  </span>
                </span>
              </a>
            </li>
          </ul>
          <div
            className="usa-nav__secondary"
          >
            <ul
              className="usa-nav__secondary-links"
            >
              <li
                className="usa-nav__secondary-item"
              >
                <a
                  href="/secondary"
                  onClick={[Function]}
                >
                  Secondary item
                </a>
              </li>
              <li
                className="usa-nav__secondary-item"
              >
                <a
                  href="/secondary2"
                  onClick={[Function]}
                >
                  Another secondary item
                </a>
              </li>
              <li
                className="usa-nav__secondary-item"
              >
                <a
                  href="/logout"
                  onClick={[Function]}
                >
                  Log out
                </a>
              </li>
            </ul>
            <div
              className="oec-logged-in-user"
            >
              <span>
                Hi, 
                Chris
                .
              </span>
            </div>
          </div>
        </div>
      </nav>
    </header>
  </div>
</div>
`;

exports[`Storyshots Header Logged out 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=""
  >
    <div
      className="usa-overlay"
      onClick={[Function]}
    />
    <header
      className="usa-header usa-header--extended"
      role="banner"
    >
      <div
        className="usa-navbar"
      >
        <div
          className="usa-logo"
          id="extended-logo"
        >
          <a
            aria-label="Hello world! home"
            href="/"
            onClick={[Function]}
          >
            <em
              className="usa-logo__text"
            >
              Hello world!
            </em>
          </a>
        </div>
        <button
          className="usa-menu-btn"
          onClick={[Function]}
        >
          Menu
        </button>
      </div>
      <nav
        className="usa-nav"
        role="navigation"
      >
        <div
          className="usa-nav__inner"
        >
          <button
            className="usa-nav__close"
            onClick={[Function]}
          >
            <img
              alt="close"
              src="close.svg"
            />
          </button>
          <ul
            className="usa-nav__primary usa-accordion"
          >
            <li
              className="usa-nav__primary-item"
            >
              <a
                className="usa-nav__link usa-current"
                href="/"
                onClick={[Function]}
              >
                <span>
                  Active section
                </span>
              </a>
            </li>
            <li
              className="usa-nav__primary-item"
            >
              <a
                className="usa-nav__link"
                href="/another"
                onClick={[Function]}
              >
                <span>
                  Another section
                </span>
              </a>
            </li>
            <li
              className="usa-nav__primary-item"
            >
              <a
                className="usa-nav__link"
                href="/attention"
                onClick={[Function]}
              >
                <span>
                  Attention needed
                  <span
                    className="attention-needed"
                  >
                     •
                    <span
                      className="usa-sr-only"
                    >
                       (attention needed)
                    </span>
                  </span>
                </span>
              </a>
            </li>
          </ul>
          <div
            className="usa-nav__secondary"
          >
            <ul
              className="usa-nav__secondary-links"
            >
              <li
                className="usa-nav__secondary-item"
              >
                <a
                  href="/secondary"
                  onClick={[Function]}
                >
                  Secondary item
                </a>
              </li>
              <li
                className="usa-nav__secondary-item"
              >
                <a
                  href="/secondary2"
                  onClick={[Function]}
                >
                  Another secondary item
                </a>
              </li>
            </ul>
            <div
              className="oec-logged-in-user"
            >
              <a
                href="/login"
                onClick={[Function]}
              >
                Log in
              </a>
            </div>
          </div>
        </div>
      </nav>
    </header>
  </div>
</div>
`;

exports[`Storyshots InlineIcon Attention needed 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <span
    className="oec-inline-icon oec-inline-icon--attentionNeeded"
  >
    <svg>
      error.svg
    </svg>
    <span
      className="usa-sr-only"
    >
      (
      attention needed
      )
    </span>
  </span>
</div>
`;

exports[`Storyshots InlineIcon Complete 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <span
    className="oec-inline-icon oec-inline-icon--complete"
  >
    <svg>
      success.svg
    </svg>
    <span
      className="usa-sr-only"
    >
      (
      complete
      )
    </span>
  </span>
</div>
`;

exports[`Storyshots InlineIcon Incomplete 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <span
    className="oec-inline-icon oec-inline-icon--incomplete"
  >
    <svg>
      error.svg
    </svg>
    <span
      className="usa-sr-only"
    >
      (
      incomplete
      )
    </span>
  </span>
</div>
`;

exports[`Storyshots Legend Default 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className="grid-row flex-wrap margin-y-2 grid-gap oec-legend"
  >
    <div
      className="margin-right-1"
    >
      <div
        className="oec-legend__symbol undefined"
      >
        <svg
          className="oec-legend__symbol__svg"
          height="1em"
          width="1em"
        >
          <rect
            fill="currentColor"
            height="100%"
            width="100%"
          />
        </svg>
      </div>
      <div
        className="width-fit-content display-inline margin-left-1 "
      >
        One fish
      </div>
    </div>
    <div
      className="margin-right-1"
    >
      <div
        className="oec-legend__symbol undefined"
      >
        <svg
          className="oec-legend__symbol__svg"
          height="1em"
          width="1em"
        >
          <rect
            fill="currentColor"
            height="100%"
            width="100%"
          />
        </svg>
      </div>
      <div
        className="width-fit-content display-inline margin-left-1 "
      >
        Two fish
      </div>
    </div>
    <div
      className="margin-right-1"
    >
      <div
        className="oec-legend__symbol text-red"
      >
        <svg
          className="oec-legend__symbol__svg"
          height="1em"
          width="1em"
        >
          <rect
            fill="currentColor"
            height="100%"
            width="100%"
          />
        </svg>
      </div>
      <div
        className="width-fit-content display-inline margin-left-1 "
      >
        Red fish
      </div>
    </div>
    <div
      className="margin-right-1"
    >
      <div
        className="oec-legend__symbol text-blue"
      >
        <svg
          className="oec-legend__symbol__svg"
          height="1em"
          width="1em"
        >
          <rect
            fill="currentColor"
            height="100%"
            width="100%"
          />
        </svg>
      </div>
      <div
        className="width-fit-content display-inline margin-left-1 "
      >
        Blue fish
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots StepList Default 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <ol
    className="oec-step-list"
  >
    <li
      className="oec-step-list__step oec-step-list__step--complete"
    >
      <div
        className="oec-step-list__step__content"
      >
        <h2
          className="oec-step-list__step__title"
        >
          One small step
        </h2>
        <div
          className="oec-step-list__step__summary"
        >
          <p>
            For a man.
          </p>
        </div>
      </div>
      <div
        className="oec-step-list__step__actions"
      >
        <div
          className="oec-step-list__step__status-text"
        >
          <span
            className="oec-inline-icon oec-inline-icon--complete"
          >
            <svg>
              success.svg
            </svg>
          </span>
          Complete
        </div>
        <a
          href="/1"
          onClick={[Function]}
        >
          Edit
          <span
            className="usa-sr-only"
          >
             
            one small step
          </span>
        </a>
      </div>
    </li>
    <li
      className="oec-step-list__step oec-step-list__step--active"
    >
      <div
        className="oec-step-list__step__content"
      >
        <h2
          className="oec-step-list__step__title"
        >
          One giant leap
        </h2>
        <div
          className="oec-step-list__step__form"
        >
          <p>
            For mankind.
          </p>
        </div>
      </div>
      <div
        className="oec-step-list__step__actions"
      />
    </li>
    <li
      className="oec-step-list__step oec-step-list__step--notStarted"
    >
      <div
        className="oec-step-list__step__content"
      >
        <h2
          className="oec-step-list__step__title"
        >
          To infinity and beyond
        </h2>
      </div>
      <div
        className="oec-step-list__step__actions"
      />
    </li>
  </ol>
</div>
`;

exports[`Storyshots Table Full width 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <table
    className="oec-table oec-table--full-width"
    id="my-table"
  >
    <thead>
      <tr>
        <th
          aria-sort="ascending"
          className="oec-table__column-header oec-sortable"
          role="columnheader"
          scope="col"
          style={
            Object {
              "width": undefined,
            }
          }
        >
          <button
            aria-label="Sort table by Name in descending order"
            className="oec-table__column-title usa-button--unstyled width-full"
            onClick={[Function]}
          >
            Name
            <div
              className="oec-table__sort-controls"
            >
              <span
                className="oec-table__sort-controls__asc active"
              />
              <span
                className="oec-table__sort-controls__desc"
              />
            </div>
          </button>
        </th>
        <th
          aria-sort="ascending"
          className="oec-table__column-header oec-sortable"
          role="columnheader"
          scope="col"
          style={
            Object {
              "width": undefined,
            }
          }
        >
          <button
            aria-label="Sort table by Price in ascending order"
            className="oec-table__column-title usa-button--unstyled width-full"
            onClick={[Function]}
          >
            Price
            <div
              className="oec-table__sort-controls"
            >
              <span
                className="oec-table__sort-controls__asc"
              />
              <span
                className="oec-table__sort-controls__desc"
              />
            </div>
          </button>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th
          scope="row"
        >
          Apple
        </th>
        <th
          scope="row"
        >
          $0.75
        </th>
      </tr>
      <tr>
        <th
          scope="row"
        >
          Avocado
        </th>
        <th
          scope="row"
        >
          $1.80
        </th>
      </tr>
      <tr>
        <th
          scope="row"
        >
          Pear
        </th>
        <th
          scope="row"
        >
          $1.10
        </th>
      </tr>
    </tbody>
  </table>
</div>
`;

exports[`Storyshots Table Normal 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <table
    className="oec-table undefined"
    id="my-table"
  >
    <thead>
      <tr>
        <th
          aria-sort="ascending"
          className="oec-table__column-header oec-sortable"
          role="columnheader"
          scope="col"
          style={
            Object {
              "width": undefined,
            }
          }
        >
          <button
            aria-label="Sort table by Name in descending order"
            className="oec-table__column-title usa-button--unstyled width-full"
            onClick={[Function]}
          >
            Name
            <div
              className="oec-table__sort-controls"
            >
              <span
                className="oec-table__sort-controls__asc active"
              />
              <span
                className="oec-table__sort-controls__desc"
              />
            </div>
          </button>
        </th>
        <th
          aria-sort="ascending"
          className="oec-table__column-header oec-sortable"
          role="columnheader"
          scope="col"
          style={
            Object {
              "width": undefined,
            }
          }
        >
          <button
            aria-label="Sort table by Price in ascending order"
            className="oec-table__column-title usa-button--unstyled width-full"
            onClick={[Function]}
          >
            Price
            <div
              className="oec-table__sort-controls"
            >
              <span
                className="oec-table__sort-controls__asc"
              />
              <span
                className="oec-table__sort-controls__desc"
              />
            </div>
          </button>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th
          scope="row"
        >
          Apple
        </th>
        <th
          scope="row"
        >
          $0.75
        </th>
      </tr>
      <tr>
        <th
          scope="row"
        >
          Avocado
        </th>
        <th
          scope="row"
        >
          $1.80
        </th>
      </tr>
      <tr>
        <th
          scope="row"
        >
          Pear
        </th>
        <th
          scope="row"
        >
          $1.10
        </th>
      </tr>
    </tbody>
  </table>
</div>
`;

exports[`Storyshots Tag Default 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <span
    className="usa-tag undefined"
  >
    I AM A TAG
  </span>
</div>
`;

exports[`Storyshots TextInput Default 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group"
  >
    <label
      className="usa-label"
      htmlFor="id"
    >
      Default text input
       
    </label>
    <input
      className="usa-input"
      id="id"
      name="id"
      onChange={[Function]}
      required={true}
      type="text"
    />
  </div>
</div>
`;

exports[`Storyshots TextInput Disabled 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group"
  >
    <label
      className="usa-label"
      htmlFor="id3"
    >
      Default text input
       
    </label>
    <input
      className="usa-input"
      disabled={true}
      id="id3"
      name="id3"
      onChange={[Function]}
      required={true}
      type="text"
    />
  </div>
</div>
`;

exports[`Storyshots TextInput Error 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group usa-form-group--error"
  >
    <label
      className="usa-label usa-label--error"
      htmlFor="id8"
    >
      Default text input
       
    </label>
    <span
      className="usa-error-message"
      id="text-input-error"
      role="alert"
    >
      
       
      Error!
    </span>
    <input
      aria-describedby="text-input-error"
      aria-invalid={true}
      className="usa-input usa-input--error"
      id="id8"
      name="id8"
      onChange={[Function]}
      required={true}
      type="text"
    />
  </div>
</div>
`;

exports[`Storyshots TextInput Error inside error Fieldset 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className="usa-form"
  >
    <fieldset
      aria-describedby="text-input-error"
      aria-invalid={true}
      aria-required={true}
      className="grid-gap grid-row usa-fieldset
			 usa-fieldset--error
			 display-inline-block
			"
      id="example-fieldset-error"
    >
      <legend
        className="usa-sr-only"
        id="fieldset-legend-example-fieldset-error"
      >
        Text inputs
      </legend>
      <span
        className="usa-error-message"
        id="text-input-error"
        role="alert"
      >
        
         
        Error!
      </span>
      <div
        className="grid-gap grid-row undefined"
      >
        <div
          className="mobile-lg:grid-col-4 display-inline-block"
        >
          <div
            className=" usa-form-group usa-form-group--error"
          >
            <label
              className="usa-label usa-label--error"
              htmlFor="id9"
            >
              Short
               
            </label>
            <span
              className="usa-error-message"
              id="text-input-error"
              role="alert"
            >
              
               
              Error!
            </span>
            <input
              aria-describedby="text-input-error"
              aria-invalid={true}
              className="usa-input usa-input--error"
              id="id9"
              name="id9"
              onChange={[Function]}
              required={true}
              type="text"
            />
          </div>
        </div>
        <div
          className="mobile-lg:grid-col-8 display-inline-block"
        >
          <div
            className=" usa-form-group usa-form-group--error"
          >
            <label
              className="usa-label usa-label--error"
              htmlFor="id10"
            >
              Long
               
            </label>
            <span
              className="usa-error-message"
              id="text-input-error"
              role="alert"
            >
              
               
              Error!
            </span>
            <input
              aria-describedby="text-input-error"
              aria-invalid={true}
              className="usa-input usa-input--error"
              id="id10"
              name="id10"
              onChange={[Function]}
              required={true}
              type="text"
            />
          </div>
        </div>
      </div>
    </fieldset>
  </div>
</div>
`;

exports[`Storyshots TextInput Optional 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group"
  >
    <label
      className="usa-label"
      htmlFor="id2"
    >
      Default optional text input
       
      <span
        className="usa-hint"
      >
         (optional)
      </span>
    </label>
    <input
      className="usa-input"
      id="id2"
      name="id2"
      onChange={[Function]}
      required={false}
      type="text"
    />
  </div>
</div>
`;

exports[`Storyshots TextInput Success 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group usa-form-group--success"
  >
    <label
      className="usa-label usa-label--success"
      htmlFor="id4"
    >
      Default text input
       
    </label>
    <span
      className="usa-success-message"
      id="text-input-success"
      role="status"
    >
      
       
      Success!
    </span>
    <input
      aria-describedby="text-input-success"
      aria-invalid={false}
      className="usa-input usa-input--success"
      id="id4"
      name="id4"
      onChange={[Function]}
      required={true}
      type="text"
    />
  </div>
</div>
`;

exports[`Storyshots TextInput Warning 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group usa-form-group--warning"
  >
    <label
      className="usa-label usa-label--warning"
      htmlFor="id5"
    >
      Default text input
       
    </label>
    <span
      className="usa-warning-message"
      id="text-input-warning"
      role="status"
    >
      <span
        className="oec-inline-icon oec-inline-icon--incomplete"
      >
        <svg>
          error.svg
        </svg>
        <span
          className="usa-sr-only"
        >
          (
          incomplete
          )
        </span>
      </span>
       
      Warning!
    </span>
    <input
      aria-describedby="text-input-warning"
      aria-invalid={false}
      className="usa-input usa-input--warning"
      id="id5"
      name="id5"
      onChange={[Function]}
      required={true}
      type="text"
    />
  </div>
</div>
`;

exports[`Storyshots TextInput Warning inside warning Fieldset 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className="usa-form"
  >
    <fieldset
      aria-describedby="text-input-warning"
      aria-invalid={false}
      aria-required={true}
      className="grid-gap grid-row usa-fieldset
			 usa-fieldset--warning
			 display-inline-block
			"
      id="example-fieldset-warning"
    >
      <legend
        className="usa-sr-only"
        id="fieldset-legend-example-fieldset-warning"
      >
        Text inputs
      </legend>
      <span
        className="usa-warning-message"
        id="text-input-warning"
        role="status"
      >
        <span
          className="oec-inline-icon oec-inline-icon--incomplete"
        >
          <svg>
            error.svg
          </svg>
          <span
            className="usa-sr-only"
          >
            (
            incomplete
            )
          </span>
        </span>
         
        Warning!
      </span>
      <div
        className="grid-gap grid-row undefined"
      >
        <div
          className="mobile-lg:grid-col-4 display-inline-block"
        >
          <div
            className=" usa-form-group usa-form-group--warning"
          >
            <label
              className="usa-label usa-label--warning"
              htmlFor="id6"
            >
              Short
               
            </label>
            <span
              className="usa-warning-message"
              id="text-input-warning"
              role="status"
            >
              <span
                className="oec-inline-icon oec-inline-icon--incomplete"
              >
                <svg>
                  error.svg
                </svg>
                <span
                  className="usa-sr-only"
                >
                  (
                  incomplete
                  )
                </span>
              </span>
               
              Warning!
            </span>
            <input
              aria-describedby="text-input-warning"
              aria-invalid={false}
              className="usa-input usa-input--warning"
              id="id6"
              name="id6"
              onChange={[Function]}
              required={true}
              type="text"
            />
          </div>
        </div>
        <div
          className="mobile-lg:grid-col-8 display-inline-block"
        >
          <div
            className=" usa-form-group usa-form-group--warning"
          >
            <label
              className="usa-label usa-label--warning"
              htmlFor="id7"
            >
              Long
               
            </label>
            <span
              className="usa-warning-message"
              id="text-input-warning"
              role="status"
            >
              <span
                className="oec-inline-icon oec-inline-icon--incomplete"
              >
                <svg>
                  error.svg
                </svg>
                <span
                  className="usa-sr-only"
                >
                  (
                  incomplete
                  )
                </span>
              </span>
               
              Warning!
            </span>
            <input
              aria-describedby="text-input-warning"
              aria-invalid={false}
              className="usa-input usa-input--warning"
              id="id7"
              name="id7"
              onChange={[Function]}
              required={true}
              type="text"
            />
          </div>
        </div>
      </div>
    </fieldset>
  </div>
</div>
`;

exports[`Storyshots TextInput With default value 1`] = `
<div
  style={
    Object {
      "padding": "40px",
    }
  }
>
  <div
    className=" usa-form-group"
  >
    <label
      className="usa-label"
      htmlFor="id1"
    >
      Default text input
       
    </label>
    <input
      className="usa-input"
      defaultValue="default text"
      id="id1"
      name="id1"
      onChange={[Function]}
      required={true}
      type="text"
    />
  </div>
</div>
`;
