openapi: 3.0.0
info:
  title: Hedwig API test
  description: |
    Prototype of REST API for Hedwig client
  version: "1.0.0"
paths:
  '/users/current':
    get:
      summary: Get user info for currently authed user
      responses:
        '200':
          description: Successfully returned the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
  '/organizations/{organizationId}/sites/{siteId}':
    get:
      summary: Return a site
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/Include'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  parameters:
    Include:
      name: include
      in: query
      schema:
        type: array
        items:
          type: string
    OrganizationId:
      name: organizationId
      in: path
      required: true
      schema:
        type: integer
        minimum: 1
    SiteId:
      name: siteId
      in: path
      required: true
      schema:
        type: integer
        minimum: 1
    StartDate:
      name: startDate
      in: query
      schema:
        type: string
    EndDate:
      name: endDate
      in: query
      schema:
        type: string
  schemas:
    User:
      required: [id, firstName, lastName]
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        suffix:
          type: string
        reports:
          type: array
          items:
            $ref: '#/components/schemas/Report'
    Organization:
      type: object
      required: [id, name]
      properties:
        id:
          type: integer
        name:
          type: string
        sites:
          type: array
          items:
            $ref: '#/components/schemas/Site'
        reports:
          type: array
          items:
            $ref: '#/components/schemas/Report'
    Site:
      type: object
      required: [id, name]
      properties:
        id:
          type: integer
        name:
          type: string
        enrollments:
          type: array
          items:
            $ref: '#/components/schemas/Enrollment'
    Enrollment:
      # includes fundings
      type: object
      required: [id, entry, exit, age, childId]
      properties:
        id:
          type: integer
        entry:
          type: string
        exit:
          type: string
        age:
          $ref: '#/components/schemas/Age'
        childId:
          type: string
        child:
          $ref: '#/components/schemas/Child'
        fundings:
          type: array
          items:
            $ref: '#/components/schemas/Funding'
    Age:
      type: string
      enum: [Infant, Preschool, School]
    Funding:
      type: object
      required: [id, source, time]
      properties:
        id:
          type: string
        source:
          $ref: '#/components/schemas/FundingSource'
        time:
          $ref: '#/components/schemas/FundingTime'
    FundingSource:
      type: string
      enum: [CDC]
    FundingTime:
      type: string
      enum: [FULL, PART]
    Child:
      # includes family
      type: object
      required: [id, firstName, lastName, birthdate]
      properties:
        id:
          type: integer
        sasid:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        suffix:
          type: string
        birthdate:
          type: string
        birthTown:  
          type: string
        birthState:
          type: string
        birthCertificateId:
          type: string
        americanIndianOrAlaskaNative:
          type: boolean
        asian:
          type: boolean
        blackOrAfricanAmerican:
          type: boolean
        nativeHawaiianOrPacificIslander:
          type: boolean
        white:
          type: boolean
        hispanicOrLatinxEthnicity:
          type: boolean
        gender:
          $ref: '#/components/schemas/Gender'
        foster:
          type: boolean
        family:
          $ref: '#/components/schemas/Family'
    Gender:
      type: string
      enum: [Male, Female, Unknown, Unspecified]
    Family:
      type: object
      required: [id, addressLine1, addressLine2, town, state, zip]
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/Child'
        addressLine1:
          type: string
        addressLine2:
          type: string
        town:
          type: string
        state:
          type: string
        zip:
          type: string
        homelessness:
          type: boolean
        determinations:
          type: array
          items:
            $ref: '#/components/schemas/Determination'
    Determination:
      type: object
      required: [id, numberOfPeople, income, determinted]
      properties:
        id:
          type: integer
        numberOfPeople:
          type: integer
        income:
          type: number
        determined:
          type: string
    Report:
      type: object
      required: [id, submittedAt]
      properties:
        id:
          type: integer
        submittedAt:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
# Added by API Auto Mocking Plugin
servers:
  - description: local json-server
    url: http://localhost:3000
